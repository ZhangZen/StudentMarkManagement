/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Model.Marks;
import Model.MarksDAO;
import Model.TempMarks;
import Model.Subject;
import Model.SubjectDAO;
import Model.Student;
import Model.StudentDAO;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author nhom4
 */
public class MarksForm extends javax.swing.JFrame implements KeyListener {

    MarksDAO bangDiemDAO = new MarksDAO();
    ArrayList<Marks> dsBangDiem = new ArrayList<>();

    TempMarks bangDiemTemp1;
    TempMarks bangDiemTemp;

    /**
     * Creates new form DiemForm
     */
    public MarksForm() {
        initComponents();
        hienThiComboBox();
        hienThiBangDiem();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtBangDiem = new javax.swing.JTable();
        jbThem = new javax.swing.JButton();
        jbSua = new javax.swing.JButton();
        jbXoa = new javax.swing.JButton();
        jbDiemTB = new javax.swing.JButton();
        jbThoat = new javax.swing.JButton();
        jcbDSSinhVien = new javax.swing.JComboBox();
        jlSinhVien = new javax.swing.JLabel();
        jcbDSMonHoc = new javax.swing.JComboBox();
        jlMonHoc = new javax.swing.JLabel();
        jtfDiem = new javax.swing.JTextField();
        jlDiem = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jtBangDiem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Student ID", "Student's full name", "Subject ID", "Subject's name", "Marks"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtBangDiem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtBangDiemMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtBangDiem);

        jbThem.setText("Add");
        jbThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbThemActionPerformed(evt);
            }
        });

        jbSua.setText("Edit");
        jbSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSuaActionPerformed(evt);
            }
        });

        jbXoa.setText("Delete");
        jbXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbXoaActionPerformed(evt);
            }
        });

        jbDiemTB.setText("Average marks list");
        jbDiemTB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbDiemTBActionPerformed(evt);
            }
        });

        jbThoat.setText("Exit");
        jbThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbThoatActionPerformed(evt);
            }
        });

        jcbDSSinhVien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbDSSinhVienActionPerformed(evt);
            }
        });

        jlSinhVien.setText("Student list");

        jcbDSMonHoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbDSMonHocActionPerformed(evt);
            }
        });

        jlMonHoc.setText("Subject list");

        jlDiem.setText("Marks");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jcbDSSinhVien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlSinhVien))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jcbDSMonHoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlMonHoc))
                        .addGap(227, 227, 227)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlDiem, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfDiem, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(jbThem)
                .addGap(60, 60, 60)
                .addComponent(jbSua)
                .addGap(57, 57, 57)
                .addComponent(jbXoa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addComponent(jbDiemTB)
                .addGap(47, 47, 47)
                .addComponent(jbThoat)
                .addGap(75, 75, 75))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jbSua, jbThem, jbThoat, jbXoa});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlSinhVien)
                    .addComponent(jlMonHoc)
                    .addComponent(jlDiem))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbDSSinhVien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbDSMonHoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfDiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbThem)
                    .addComponent(jbSua)
                    .addComponent(jbXoa)
                    .addComponent(jbDiemTB)
                    .addComponent(jbThoat))
                .addGap(29, 29, 29))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbXoaActionPerformed
        // TODO add your handling code here:
        if (bangDiemTemp1 != null) {
            if (bangDiemDAO.xoa(bangDiemTemp1)) {
                hienThiBangDiem();
                JOptionPane.showMessageDialog(this, "Deleting succeeded");
            } else {
                JOptionPane.showMessageDialog(this, "Deleting failed");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Choose a line and click Delete to remove.");
        }
        bangDiemTemp1 = null;
    }//GEN-LAST:event_jbXoaActionPerformed

    private void jcbDSSinhVienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbDSSinhVienActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbDSSinhVienActionPerformed

    private void jbThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbThemActionPerformed
        // TODO add your handling code here:
        String combox1 = jcbDSSinhVien.getSelectedItem().toString();
        String[] masinhvien = combox1.split("-");
        String combox2 = jcbDSMonHoc.getSelectedItem().toString();
        String[] mamonhoc = combox2.split("-");

        StudentDAO svDAO = new StudentDAO();
        SubjectDAO mhDAO = new SubjectDAO();

        Student sv = svDAO.laySVTheoMa(masinhvien[0]);
        Subject mh = mhDAO.layMHTheoMa(mamonhoc[0]);

        String masv = sv.getMaSV();
        String mamh = mh.getMaMon();
        String tensv = sv.getTenSV();
        String tenmon = mh.getTenMon();
        try {
            String diemTemp = jtfDiem.getText();
            char charAt = diemTemp.charAt(0);
            float diem = Float.parseFloat(diemTemp);
            if (diem < 0 || diem > 10) {
                JOptionPane.showMessageDialog(this, "The marks must over 0 and under 10. Try again");
                return;
            }
            boolean coSinhVienChua = false, coMonHocChua = false, themMoiThanhCong = false;
            MarksDAO ctdDAO = new MarksDAO();
            for (int i = 0; i < dsBangDiem.size(); i++) {
                if (dsBangDiem.get(i).getSinhVien().getMaSV().equals(sv.getMaSV())) {
                    coSinhVienChua = true;
                    for (int j = 0; j < dsBangDiem.get(i).getPairDMH().size(); j++) {
                        if (mh.getMaMon().equals(dsBangDiem.get(i).getPairDMH().get(j).getFirst().getMaMon())) {
                            coMonHocChua = true;
                            JOptionPane.showMessageDialog(this, "This student has had marks at the chosen subject. Try again");
                            break;
                        }
                    }
                    if (!coMonHocChua) {
                        dsBangDiem.get(i).addMonHocVaDiem(mh, diem);
                        themMoiThanhCong = ctdDAO.InsertDiem(dsBangDiem.get(i));
                    }
                }
            }
            if (!coSinhVienChua) {
                Marks chiTietDiem = new Marks();
                chiTietDiem.setSinhVien(sv);
                chiTietDiem.addMonHocVaDiem(mh, diem);
                themMoiThanhCong = ctdDAO.InsertDiem(chiTietDiem);
            }
            if (themMoiThanhCong) {
                JOptionPane.showMessageDialog(this, "Adding succeeded");
                hienThiBangDiem();
            }
        } catch (IndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(this, "Marks is empty. Try again");
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "The mark must be a NUMBER. Please try again");
        }
    }//GEN-LAST:event_jbThemActionPerformed

    public void hienThiComboBox() {
        SubjectDAO mhDAO = new SubjectDAO();
        ArrayList<Subject> dsMonHoc = mhDAO.layDanhSachMonHoc();
        for (int i = 0; i < dsMonHoc.size(); i++) {
            jcbDSMonHoc.addItem(dsMonHoc.get(i).getMaMon() + "-" + dsMonHoc.get(i).getTenMon());
        }
        StudentDAO sinhVienDAO = new StudentDAO();
        ArrayList<Student> dsSinhVien = sinhVienDAO.layDanhSachSinhVien();
        for (int i = 0; i < dsSinhVien.size(); i++) {
            jcbDSSinhVien.addItem(dsSinhVien.get(i).getMaSV() + "-" + dsSinhVien.get(i).getTenSV());
        }
    }

    public void hienThiBangDiem() {
        dsBangDiem = bangDiemDAO.LayDanhSachChiTietDiem();
        DefaultTableModel dtm = new DefaultTableModel();
        dtm.addColumn("Student ID");
        dtm.addColumn("Student's name");
        dtm.addColumn("Subject ID");
        dtm.addColumn("Subject's name");
        dtm.addColumn("Marks");
        for (int i = 0; i < dsBangDiem.size(); i++) {
            for (int j = 0; j < dsBangDiem.get(i).getPairDMH().size(); j++) {
                String[] data = {dsBangDiem.get(i).getSinhVien().getMaSV(), dsBangDiem.get(i).getSinhVien().getTenSV(),
                    dsBangDiem.get(i).getPairDMH().get(j).getFirst().getMaMon(),
                    dsBangDiem.get(i).getPairDMH().get(j).getFirst().getTenMon(),
                    dsBangDiem.get(i).getPairDMH().get(j).getSecond() + ""};
                dtm.addRow(data);
            }
        }
        jtBangDiem.setModel(dtm);
        jtBangDiem.addKeyListener(this);
    }
    private void jbThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbThoatActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_jbThoatActionPerformed

    public boolean coThayDoiDiem() {
        if (bangDiemTemp.getDiem() == bangDiemTemp1.getDiem()) {
            return false;
        }
        return true;
    }

    public boolean coThayDoiThongTinCoBan() {
        if (bangDiemTemp.getSinhVien().getMaSV().equals(bangDiemTemp1.getSinhVien().getMaSV())
                && bangDiemTemp.getSinhVien().getTenSV().equals(bangDiemTemp1.getSinhVien().getTenSV())
                && bangDiemTemp.getMonHoc().getMaMon().equals(bangDiemTemp1.getMonHoc().getMaMon())
                && bangDiemTemp.getMonHoc().getTenMon().equals(bangDiemTemp1.getMonHoc().getTenMon())) {
            return false;
        }
        return true;
    }

    private void jbSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSuaActionPerformed
        // TODO add your handling code here:
        if (bangDiemTemp != null) {
            if (!coThayDoiThongTinCoBan()) {
                if (coThayDoiDiem()) {
                    if (bangDiemTemp.getDiem() > 0 || bangDiemTemp.getDiem() < 10) {
                        if (bangDiemDAO.update(bangDiemTemp)) {
                            hienThiBangDiem();
                            JOptionPane.showMessageDialog(this, "Editting succeeded");
                        } else {
                            JOptionPane.showMessageDialog(this, "Editting failed");
                            hienThiBangDiem();
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "The marks must be over 0 and under 10");
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Choose a line and RETYPE the marks to update.");
                }
            } else {
                hienThiBangDiem();
                JOptionPane.showMessageDialog(this, "Cannot change any infor belong to student and subject");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Choose a line and RETYPE the marks to update.");
        }
        bangDiemTemp = null;
        bangDiemTemp1 = null;
    }//GEN-LAST:event_jbSuaActionPerformed

    private void jbDiemTBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbDiemTBActionPerformed
        // TODO add your handling code here:
        if (new MarksDAO().LayDanhSachChiTietDiem().size() <= 0) {
            JOptionPane.showMessageDialog(this, "The marks list is empty");
        } else {
            AverageMarksForm averageMarksForm = new AverageMarksForm();
            averageMarksForm.setVisible(true);
        }

    }//GEN-LAST:event_jbDiemTBActionPerformed

    private void jcbDSMonHocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbDSMonHocActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbDSMonHocActionPerformed

    private void jtBangDiemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtBangDiemMouseClicked
        // TODO add your handling code here:
        int rowSelected = jtBangDiem.getSelectedRow();
        if (rowSelected == -1) {
            return;
        }
        String maSV = jtBangDiem.getValueAt(rowSelected, 0) + "";
        String tenSV = jtBangDiem.getValueAt(rowSelected, 1) + "";
        String maMH = jtBangDiem.getValueAt(rowSelected, 2) + "";
        String tenMH = jtBangDiem.getValueAt(rowSelected, 3) + "";
        String diem = jtBangDiem.getValueAt(rowSelected, 4) + "";
        bangDiemTemp1 = bangDiemDAO.layThongTinTheoMa(maSV, maMH);
    }//GEN-LAST:event_jtBangDiemMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MarksForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MarksForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MarksForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MarksForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            MarksForm df = new MarksForm();
            df.setVisible(true);
            df.setLocationRelativeTo(null);
            df.setSize(950, 500);
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbDiemTB;
    private javax.swing.JButton jbSua;
    private javax.swing.JButton jbThem;
    private javax.swing.JButton jbThoat;
    private javax.swing.JButton jbXoa;
    private javax.swing.JComboBox jcbDSMonHoc;
    private javax.swing.JComboBox jcbDSSinhVien;
    private javax.swing.JLabel jlDiem;
    private javax.swing.JLabel jlMonHoc;
    private javax.swing.JLabel jlSinhVien;
    private javax.swing.JTable jtBangDiem;
    private javax.swing.JTextField jtfDiem;
    // End of variables declaration//GEN-END:variables

    @Override
    public void keyTyped(KeyEvent e) {
    }

    @Override
    public void keyPressed(KeyEvent e) {
    }

    @Override
    public void keyReleased(KeyEvent e) {
        if (e.getKeyCode() == KeyEvent.VK_ENTER) {
            int rowSelected = jtBangDiem.getSelectedRow();
            if (rowSelected == -1) {
                return;
            }
            String maSV = jtBangDiem.getValueAt(rowSelected, 0) + "";
            String tenSV = jtBangDiem.getValueAt(rowSelected, 1) + "";
            String maMH = jtBangDiem.getValueAt(rowSelected, 2) + "";
            String tenMH = jtBangDiem.getValueAt(rowSelected, 3) + "";
            String diem = jtBangDiem.getValueAt(rowSelected, 4) + "";
            Student sinhVien = new StudentDAO().laySVTheoMa(bangDiemTemp1.getSinhVien().getMaSV());
            if (!sinhVien.getTenSV().equals(tenSV) || !sinhVien.getMaSV().equals(maSV)) {
                sinhVien = new Student(maSV, tenSV, sinhVien.getMatKhau(), sinhVien.getNgaySinh(), sinhVien.getNoiSinh(), sinhVien.getLop(), diem);
            } else {
                sinhVien = new StudentDAO().laySVTheoMa(maSV);
            }
            Subject monHoc = new SubjectDAO().layMHTheoMa(maMH);
            if (!monHoc.getMaMon().equals(maMH) || !monHoc.getTenMon().equals(tenMH)) {
                monHoc = new Subject(maMH, tenMH, diem, bangDiemTemp1.getMonHoc().getSoTinChi());
            } else {
                monHoc = new SubjectDAO().layMHTheoMa(maMH);
            }
            bangDiemTemp = new TempMarks(sinhVien, monHoc, Float.parseFloat(diem));
        }
    }

}
