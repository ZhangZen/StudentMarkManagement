/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Model.Subject;
import Model.SubjectDAO;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author nhom4
 */
public class SubjectListForm extends javax.swing.JFrame implements KeyListener {

    String maMH, tenMH, khoa;
    int soTinChi;
    Subject monHoc;
    Subject monHocTemp;
    SubjectDAO monHocDAO = new SubjectDAO();

    /**
     * Creates new form ListMonHocForm
     */
    public SubjectListForm() {
        initComponents();
        hienThiDSMonHoc();
        if (LogInForm.maQuyen == 0) {
            jbSua.setVisible(false);
            jbThem.setVisible(false);
            jbXoa.setVisible(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtDSMonHoc = new javax.swing.JTable();
        jbSua = new javax.swing.JButton();
        jbXoa = new javax.swing.JButton();
        jbThoat = new javax.swing.JButton();
        jlDSMonHoc = new javax.swing.JLabel();
        jbThem = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jtDSMonHoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Subject ID", "Subject's name", "Branch of learning", "Number of credits"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtDSMonHoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtDSMonHocMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtDSMonHoc);

        jbSua.setText("Edit");
        jbSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSuaActionPerformed(evt);
            }
        });

        jbXoa.setText("Delete");
        jbXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbXoaActionPerformed(evt);
            }
        });

        jbThoat.setText("Exit");
        jbThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbThoatActionPerformed(evt);
            }
        });

        jlDSMonHoc.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jlDSMonHoc.setText("SUBJECT LIST");

        jbThem.setText("Add");
        jbThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbThemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 652, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbThem, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(jbSua, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(jbXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 66, 66)
                .addComponent(jbThoat, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
            .addGroup(layout.createSequentialGroup()
                .addGap(251, 251, 251)
                .addComponent(jlDSMonHoc)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlDSMonHoc)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbSua, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbThoat, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbThem, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(49, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbThoatActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_jbThoatActionPerformed

    private void jbXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbXoaActionPerformed
        // TODO add your handling code here:
        if (monHocTemp != null) {
            if (monHocDAO.xoaMH(monHocTemp.getMaMon())) {
                hienThiDSMonHoc();
                JOptionPane.showMessageDialog(this, "Deleting succeeded");
            } else {
                JOptionPane.showMessageDialog(this, "Deleting failed");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Choose a student by click on and click Delete to remove");
        }
        monHoc = null;
        monHocTemp = null;
    }//GEN-LAST:event_jbXoaActionPerformed

    private void jtDSMonHocMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtDSMonHocMouseClicked
        // TODO add your handling code here:
        int rowSelected = jtDSMonHoc.getSelectedRow();
        if (rowSelected == -1) {
            return;
        }
        maMH = jtDSMonHoc.getValueAt(rowSelected, 0) + "";
        tenMH = jtDSMonHoc.getValueAt(rowSelected, 1) + "";
        khoa = jtDSMonHoc.getValueAt(rowSelected, 2) + "";
        soTinChi = Integer.parseInt(jtDSMonHoc.getValueAt(rowSelected, 3) + "");
        monHocTemp = new Subject(maMH, tenMH, khoa, soTinChi);
    }//GEN-LAST:event_jtDSMonHocMouseClicked

    public boolean coThayDoiThongTin() {
        if (monHoc.getTenMon().equals(monHocTemp.getTenMon()) && monHoc.getKhoa().equals(monHocTemp.getKhoa()) && monHoc.getSoTinChi() == monHocTemp.getSoTinChi()) {
            return false;
        }
        return true;
    }

    public boolean coThayDoiMa() {
        if (monHoc.getMaMon().equals(monHocTemp.getMaMon())) {
            return false;
        }
        return true;
    }

    private void jbSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSuaActionPerformed
        // TODO add your handling code here:
        if (monHoc != null) {
            if (!coThayDoiMa()) {
                if (coThayDoiThongTin()) {
                    if (monHocDAO.update(monHoc)) {
                        hienThiDSMonHoc();
                        JOptionPane.showMessageDialog(this, "Editting succeeded");
                    } else {
                        JOptionPane.showMessageDialog(this, "Editting failed");
                        hienThiDSMonHoc();
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Choose a subject, RETYPE any infor (except ID) and press ENTER to change");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Cannot change subject ID");
                hienThiDSMonHoc();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Choose a subject, RETYPE any infor (except ID) and press ENTER to change");
        }
        monHoc = null;
        monHocTemp = null;
    }//GEN-LAST:event_jbSuaActionPerformed

    private void jbThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbThemActionPerformed
        SubjectForm subjectForm = new SubjectForm();
        subjectForm.setVisible(true);
        subjectForm.setSize(600, 300);
    }//GEN-LAST:event_jbThemActionPerformed

    public void hienThiDSMonHoc() {
        ArrayList<Subject> dsMH = monHocDAO.layDanhSachMonHoc();
        DefaultTableModel dtm = new DefaultTableModel();
        dtm.addColumn("Subject ID");
        dtm.addColumn("Subject's name");
        dtm.addColumn("Branch of learning");
        dtm.addColumn("Number of credits");
        for (int i = 0; i < dsMH.size(); i++) {
            String[] s = {dsMH.get(i).getMaMon(), dsMH.get(i).getTenMon(), dsMH.get(i).getKhoa(), dsMH.get(i).getSoTinChi() + ""};
            dtm.addRow(s);
        }
        jtDSMonHoc.setModel(dtm);
        jtDSMonHoc.addKeyListener(this);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SubjectListForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SubjectListForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SubjectListForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SubjectListForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new SubjectListForm().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbSua;
    private javax.swing.JButton jbThem;
    private javax.swing.JButton jbThoat;
    private javax.swing.JButton jbXoa;
    private javax.swing.JLabel jlDSMonHoc;
    private javax.swing.JTable jtDSMonHoc;
    // End of variables declaration//GEN-END:variables

    @Override
    public void keyTyped(KeyEvent e) {
    }

    @Override
    public void keyPressed(KeyEvent e) {
    }

    @Override
    public void keyReleased(KeyEvent e) {
        if (LogInForm.maQuyen == 1) {
            if (e.getKeyCode() == KeyEvent.VK_ENTER) {
                int rowSelected = jtDSMonHoc.getSelectedRow();
                if (rowSelected == -1) {
                    return;
                }
                maMH = jtDSMonHoc.getValueAt(rowSelected, 0) + "";
                tenMH = jtDSMonHoc.getValueAt(rowSelected, 1) + "";
                khoa = jtDSMonHoc.getValueAt(rowSelected, 2) + "";
                soTinChi = Integer.parseInt(jtDSMonHoc.getValueAt(rowSelected, 3) + "");
                monHoc = new Subject(maMH, tenMH, khoa, soTinChi);
            }
        } else {
            hienThiDSMonHoc();
            JOptionPane.showMessageDialog(this, "Cannot change anything in this table");
        }
    }

}
