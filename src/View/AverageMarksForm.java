/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Model.MarksDAO;
import Model.Pair;
import Model.Student;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Objects;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author nhom4
 */
public class AverageMarksForm extends javax.swing.JFrame {

    MarksDAO chiTietDiemDAO = new MarksDAO();
    ArrayList<Pair<Student, Float>> dsDiemTB = chiTietDiemDAO.tinhDiemTB();
    ArrayList<Pair<Student, Float>> dsDiemSapXep = null;
    public static ArrayList<Pair<Student, Float>> kqTimKiem;

    /**
     * Creates new form DiemTrungBinhForm
     */
    public AverageMarksForm() {
        initComponents();
        jbThongTinMonHoc.setVisible(false);
        hienThiBangDiem(dsDiemTB);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtBangDiemTB = new javax.swing.JTable();
        jlDSDiemTB = new javax.swing.JLabel();
        jbThoat = new javax.swing.JButton();
        jtfTimKiem = new javax.swing.JTextField();
        jbTinhRank = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jbTimKiem = new javax.swing.JButton();
        jbThongTinMonHoc = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jtBangDiemTB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Student ID", "Student' s full name", "Average marks"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtBangDiemTB.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtBangDiemTBKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jtBangDiemTB);

        jlDSDiemTB.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jlDSDiemTB.setText("AVERAGE MARKS LIST");

        jbThoat.setText("Exit");
        jbThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbThoatActionPerformed(evt);
            }
        });

        jtfTimKiem.setText("Search by student ID");
        jtfTimKiem.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtfTimKiemFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfTimKiemFocusLost(evt);
            }
        });
        jtfTimKiem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtfTimKiemMouseClicked(evt);
            }
        });
        jtfTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfTimKiemActionPerformed(evt);
            }
        });
        jtfTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfTimKiemKeyReleased(evt);
            }
        });

        jbTinhRank.setText("Rank");
        jbTinhRank.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbTinhRankActionPerformed(evt);
            }
        });

        jbTimKiem.setText("Search");
        jbTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbTimKiemActionPerformed(evt);
            }
        });
        jPanel1.add(jbTimKiem);

        jbThongTinMonHoc.setText("Subject list detail");
        jbThongTinMonHoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbThongTinMonHocActionPerformed(evt);
            }
        });
        jPanel1.add(jbThongTinMonHoc);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 40, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 619, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(42, 42, 42))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jlDSDiemTB)
                                .addGap(219, 219, 219))))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jbTinhRank, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(189, 189, 189)
                .addComponent(jbThoat, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(167, 167, 167))
            .addGroup(layout.createSequentialGroup()
                .addGap(244, 244, 244)
                .addComponent(jtfTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jlDSDiemTB)
                .addGap(52, 52, 52)
                .addComponent(jtfTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbTinhRank, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbThoat, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void hienThiBangDiem(ArrayList<Pair<Student, Float>> dsDiem) {
        DefaultTableModel dtm = new DefaultTableModel();
        dtm.addColumn("Student ID");
        dtm.addColumn("Student's full name");
        dtm.addColumn("Average marks");
        for (int i = 0; i < dsDiem.size(); i++) {
            String row[] = {dsDiem.get(i).getFirst().getMaSV(), dsDiem.get(i).getFirst().getTenSV(),
                dsDiem.get(i).getSecond() + ""};
            dtm.addRow(row);
        }
        jtBangDiemTB.setModel(dtm);
    }

    private void jbThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbThoatActionPerformed
        // TODO add your handling code here:
        setVisible(false);
    }//GEN-LAST:event_jbThoatActionPerformed

    public void tinhRank() {
        dsDiemSapXep = dsDiemTB;
        Collections.sort(dsDiemSapXep, (Pair<Student, Float> o1, Pair<Student, Float> o2) -> {
            if (o1.getSecond() > o2.getSecond()) {
                return -1;
            } else {
                if (Objects.equals(o1.getSecond(), o2.getSecond())) {
                    return 0;
                }
                return 1;
            }
        });
    }

    public void hienThiBangXepHang() {
        DefaultTableModel dtm = new DefaultTableModel();
        dtm.addColumn("Rank");
        dtm.addColumn("Student ID");
        dtm.addColumn("Student's full name");
        dtm.addColumn("Average marks");
        for (int i = 0; i < dsDiemSapXep.size(); i++) {
            String row[] = {i + 1 + "", dsDiemSapXep.get(i).getFirst().getMaSV(), dsDiemSapXep.get(i).getFirst().getTenSV(),
                dsDiemSapXep.get(i).getSecond() + ""};
            dtm.addRow(row);
        }
        jtBangDiemTB.setModel(dtm);
    }

    private void jbTinhRankActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbTinhRankActionPerformed
        // TODO add your handling code here:
        if (dsDiemTB.size() > 0) {
            tinhRank();
            hienThiBangXepHang();
            jbThongTinMonHoc.setVisible(false);
        } else {
            JOptionPane.showMessageDialog(this, "The average marks is empty. Cannot rank anything");
        }
    }//GEN-LAST:event_jbTinhRankActionPerformed

    private void jbThongTinMonHocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbThongTinMonHocActionPerformed
        // TODO add your handling code here:
        new PersonalMarksListForm().setVisible(true);
    }//GEN-LAST:event_jbThongTinMonHocActionPerformed

    private void jbTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbTimKiemActionPerformed
        // TODO add your handling code here:
        String maSV = jtfTimKiem.getText();
        kqTimKiem = new ArrayList<>();
        for (int i = 0; i < dsDiemTB.size(); i++) {
            if (dsDiemTB.get(i).getFirst().getMaSV().equals(maSV)) {
                Pair<Student, Float> get = dsDiemTB.get(i);
                kqTimKiem.add(get);
                break;
            }
        }
        if (kqTimKiem.size() > 0) {
            hienThiBangDiem(kqTimKiem);
            jbThongTinMonHoc.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Result not found");
        }
    }//GEN-LAST:event_jbTimKiemActionPerformed

    private void jtfTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfTimKiemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfTimKiemActionPerformed

    private void jtfTimKiemFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfTimKiemFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfTimKiemFocusGained

    private void jtfTimKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfTimKiemKeyReleased
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String maSV = jtfTimKiem.getText();
            kqTimKiem = new ArrayList<>();
            for (int i = 0; i < dsDiemTB.size(); i++) {
                if (dsDiemTB.get(i).getFirst().getMaSV().equals(maSV)) {
                    Pair<Student, Float> get = dsDiemTB.get(i);
                    kqTimKiem.add(get);
                    break;
                }
            }
            if (kqTimKiem.size() > 0) {
                hienThiBangDiem(kqTimKiem);
            } else {
                JOptionPane.showMessageDialog(this, "Result not found");
            }
            jbThongTinMonHoc.setVisible(true);
        }
    }//GEN-LAST:event_jtfTimKiemKeyReleased

    private void jtfTimKiemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtfTimKiemMouseClicked
        // TODO add your handling code here:
        jtfTimKiem.setText("");
    }//GEN-LAST:event_jtfTimKiemMouseClicked

    private void jtBangDiemTBKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtBangDiemTBKeyReleased
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            JOptionPane.showMessageDialog(this, "Cannot change anyting in this table");
            hienThiBangDiem(dsDiemTB);
        }
    }//GEN-LAST:event_jtBangDiemTBKeyReleased

    private void jtfTimKiemFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfTimKiemFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfTimKiemFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AverageMarksForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AverageMarksForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AverageMarksForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AverageMarksForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new AverageMarksForm().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbThoat;
    private javax.swing.JButton jbThongTinMonHoc;
    private javax.swing.JButton jbTimKiem;
    private javax.swing.JButton jbTinhRank;
    private javax.swing.JLabel jlDSDiemTB;
    private javax.swing.JTable jtBangDiemTB;
    private javax.swing.JTextField jtfTimKiem;
    // End of variables declaration//GEN-END:variables
}
